{
  "version": 3,
  "sources": ["../../../node_modules/@remote-ui/core/build/esm/component.mjs", "../../../node_modules/@remote-ui/core/build/esm/types.mjs", "../../../node_modules/@remote-ui/core/build/esm/utilities.mjs", "../../../node_modules/@remote-ui/core/build/esm/root.mjs", "../../../node_modules/@shopify/ui-extensions/build/esm/utilities/registration.mjs", "../../../node_modules/@shopify/ui-extensions/build/esm/surfaces/checkout/extension.mjs", "../../../node_modules/@shopify/ui-extensions/build/esm/surfaces/checkout/components/Banner/Banner.mjs", "../src/Checkout.js"],
  "sourceRoot": "/home/checkouttimer/htdocs/checkouttimer.codevibez.com/extensions/checkout-timer/src",
  "sourcesContent": ["function createRemoteComponent(componentType) {\n  return componentType;\n}\n\nexport { createRemoteComponent };\n", "const ACTION_MOUNT = 0;\nconst ACTION_INSERT_CHILD = 1;\nconst ACTION_REMOVE_CHILD = 2;\nconst ACTION_UPDATE_TEXT = 3;\nconst ACTION_UPDATE_PROPS = 4;\nconst KIND_ROOT = 0;\nconst KIND_COMPONENT = 1;\nconst KIND_TEXT = 2;\nconst KIND_FRAGMENT = 3;\n\nexport { ACTION_INSERT_CHILD, ACTION_MOUNT, ACTION_REMOVE_CHILD, ACTION_UPDATE_PROPS, ACTION_UPDATE_TEXT, KIND_COMPONENT, KIND_FRAGMENT, KIND_ROOT, KIND_TEXT };\n", "import { KIND_COMPONENT, KIND_TEXT, KIND_FRAGMENT } from './types.mjs';\n\nfunction isRemoteComponent(child) {\n  return child != null && child.kind === KIND_COMPONENT;\n}\nfunction isRemoteText(child) {\n  return child != null && child.kind === KIND_TEXT;\n}\nfunction isRemoteFragment(object) {\n  return object != null && object.kind === KIND_FRAGMENT;\n}\n\nexport { isRemoteComponent, isRemoteFragment, isRemoteText };\n", "import { KIND_ROOT, ACTION_MOUNT, ACTION_INSERT_CHILD, KIND_TEXT, ACTION_REMOVE_CHILD, KIND_COMPONENT, KIND_FRAGMENT, ACTION_UPDATE_PROPS, ACTION_UPDATE_TEXT } from './types.mjs';\nimport { isRemoteFragment } from './utilities.mjs';\n\nconst FUNCTION_CURRENT_IMPLEMENTATION_KEY = '__current';\nconst EMPTY_OBJECT = {};\nconst EMPTY_ARRAY = [];\nfunction createRemoteRoot(channel, {\n  strict = true,\n  components\n} = {}) {\n  let currentId = 0;\n  const rootInternals = {\n    strict,\n    mounted: false,\n    channel,\n    children: EMPTY_ARRAY,\n    nodes: new WeakSet(),\n    parents: new WeakMap(),\n    tops: new WeakMap(),\n    components: new WeakMap(),\n    fragments: new WeakMap()\n  };\n  if (strict) Object.freeze(components);\n  const remoteRoot = {\n    kind: KIND_ROOT,\n    options: strict ? Object.freeze({\n      strict,\n      components\n    }) : {\n      strict,\n      components\n    },\n\n    get children() {\n      return rootInternals.children;\n    },\n\n    createComponent(type, ...rest) {\n      if (components && components.indexOf(type) < 0) {\n        throw new Error(`Unsupported component: ${type}`);\n      }\n\n      const [initialProps, initialChildren, ...moreChildren] = rest;\n      const normalizedInitialProps = initialProps !== null && initialProps !== void 0 ? initialProps : {};\n      const normalizedInitialChildren = [];\n      const normalizedInternalProps = {};\n\n      if (initialProps) {\n        for (const key of Object.keys(initialProps)) {\n          // \"children\" as a prop can be extremely confusing with the \"children\" of\n          // a component. In React, a \"child\" can be anything, but once it reaches\n          // a host environment (like this remote `Root`), we want \"children\" to have\n          // only one meaning: the actual, resolved children components and text.\n          //\n          // To enforce this, we delete any prop named \"children\". We don\u2019t take a copy\n          // of the props for performance, so a user calling this function must do so\n          // with an object that can handle being mutated.\n          if (key === 'children') continue;\n          normalizedInternalProps[key] = makeValueHotSwappable(serializeProp(initialProps[key]));\n        }\n      }\n\n      if (initialChildren) {\n        if (Array.isArray(initialChildren)) {\n          for (const child of initialChildren) {\n            normalizedInitialChildren.push(normalizeChild(child, remoteRoot));\n          }\n        } else {\n          normalizedInitialChildren.push(normalizeChild(initialChildren, remoteRoot)); // The complex tuple type of `rest` makes it so `moreChildren` is\n          // incorrectly inferred as potentially being the props of the component,\n          // lazy casting since we know it will be an array of child elements\n          // (or empty).\n\n          for (const child of moreChildren) {\n            normalizedInitialChildren.push(normalizeChild(child, remoteRoot));\n          }\n        }\n      }\n\n      const id = `${currentId++}`;\n      const internals = {\n        externalProps: strict ? Object.freeze(normalizedInitialProps) : normalizedInitialProps,\n        internalProps: normalizedInternalProps,\n        children: strict ? Object.freeze(normalizedInitialChildren) : normalizedInitialChildren\n      };\n      const component = {\n        kind: KIND_COMPONENT,\n\n        get children() {\n          return internals.children;\n        },\n\n        get props() {\n          return internals.externalProps;\n        },\n\n        get remoteProps() {\n          return internals.internalProps;\n        },\n\n        updateProps: newProps => updateProps(component, newProps, internals, rootInternals),\n        appendChild: child => appendChild(component, normalizeChild(child, remoteRoot), internals, rootInternals),\n        removeChild: child => removeChild(component, child, internals, rootInternals),\n        insertChildBefore: (child, before) => insertChildBefore(component, normalizeChild(child, remoteRoot), before, internals, rootInternals),\n        // Just satisfying the type definition, since we need to write\n        // some properties manually, which we do below. If we just `as any`\n        // the whole object, we lose the implicit argument types for the\n        // methods above.\n        ...EMPTY_OBJECT\n      };\n      rootInternals.components.set(component, internals);\n      Object.defineProperty(component, 'type', {\n        value: type,\n        configurable: false,\n        writable: false,\n        enumerable: true\n      });\n      makePartOfTree(component, rootInternals);\n      makeRemote(component, id, remoteRoot);\n\n      for (const child of internals.children) {\n        moveNodeToContainer(component, child, rootInternals);\n      }\n\n      return component;\n    },\n\n    createText(content = '') {\n      const id = `${currentId++}`;\n      const internals = {\n        text: content\n      };\n      const text = {\n        kind: KIND_TEXT,\n\n        get text() {\n          return internals.text;\n        },\n\n        updateText: newText => updateText(text, newText, internals, rootInternals),\n        // Just satisfying the type definition, since we need to write\n        // some properties manually.\n        ...EMPTY_OBJECT\n      };\n      makePartOfTree(text, rootInternals);\n      makeRemote(text, id, remoteRoot);\n      return text;\n    },\n\n    createFragment() {\n      const id = `${currentId++}`;\n      const internals = {\n        children: strict ? Object.freeze([]) : []\n      };\n      const fragment = {\n        kind: KIND_FRAGMENT,\n\n        get children() {\n          return internals.children;\n        },\n\n        appendChild: child => appendChild(fragment, normalizeChild(child, remoteRoot), internals, rootInternals),\n        removeChild: child => removeChild(fragment, child, internals, rootInternals),\n        insertChildBefore: (child, before) => insertChildBefore(fragment, normalizeChild(child, remoteRoot), before, internals, rootInternals),\n        // Just satisfying the type definition, since we need to write\n        // some properties manually.\n        ...EMPTY_OBJECT\n      };\n      rootInternals.fragments.set(fragment, internals);\n      makePartOfTree(fragment, rootInternals);\n      makeRemote(fragment, id, remoteRoot);\n      return fragment;\n    },\n\n    appendChild: child => appendChild(remoteRoot, normalizeChild(child, remoteRoot), rootInternals, rootInternals),\n    removeChild: child => removeChild(remoteRoot, child, rootInternals, rootInternals),\n    insertChildBefore: (child, before) => insertChildBefore(remoteRoot, normalizeChild(child, remoteRoot), before, rootInternals, rootInternals),\n\n    mount() {\n      if (rootInternals.mounted) return Promise.resolve();\n      rootInternals.mounted = true;\n      return Promise.resolve(channel(ACTION_MOUNT, rootInternals.children.map(serializeChild)));\n    }\n\n  };\n  return remoteRoot;\n}\n\nfunction connected(element, {\n  tops\n}) {\n  var _tops$get;\n\n  return ((_tops$get = tops.get(element)) === null || _tops$get === void 0 ? void 0 : _tops$get.kind) === KIND_ROOT;\n}\n\nfunction allDescendants(element, withEach) {\n  const recurse = element => {\n    if ('children' in element) {\n      for (const child of element.children) {\n        withEach(child);\n        recurse(child);\n      }\n    }\n  };\n\n  recurse(element);\n}\n\nfunction perform(element, rootInternals, {\n  remote,\n  local\n}) {\n  const {\n    mounted,\n    channel\n  } = rootInternals;\n\n  if (mounted && (element.kind === KIND_ROOT || connected(element, rootInternals))) {\n    // should only create context once async queue is cleared\n    remote(channel); // technically, we should be waiting for the remote update to apply,\n    // then apply it locally. The implementation below is too naive because\n    // it allows local updates to get out of sync with remote ones.\n    // if (remoteResult == null || !('then' in remoteResult)) {\n    //   local();\n    //   return;\n    // } else {\n    //   return remoteResult.then(() => {\n    //     local();\n    //   });\n    // }\n  }\n\n  local();\n}\n\nfunction updateText(text, newText, internals, rootInternals) {\n  return perform(text, rootInternals, {\n    remote: channel => channel(ACTION_UPDATE_TEXT, text.id, newText),\n    local: () => {\n      internals.text = newText;\n    }\n  });\n}\n\nconst IGNORE = Symbol('ignore');\n\nfunction updateProps(component, newProps, internals, rootInternals) {\n  const {\n    strict\n  } = rootInternals;\n  const {\n    internalProps: currentProps,\n    externalProps: currentExternalProps\n  } = internals;\n  const normalizedNewProps = {};\n  const hotSwapFunctions = [];\n  let hasRemoteChange = false;\n\n  for (const key of Object.keys(newProps)) {\n    // See notes above for why we treat `children` as a reserved prop.\n    if (key === 'children') continue;\n    const currentExternalValue = currentExternalProps[key];\n    const newExternalValue = newProps[key];\n    const currentValue = currentProps[key];\n    const newValue = serializeProp(newExternalValue); // Bail out if we have equal, primitive types\n\n    if (currentValue === newValue && (newValue == null || typeof newValue !== 'object')) {\n      continue;\n    }\n\n    const [value, hotSwaps] = tryHotSwappingValues(currentValue, newValue);\n\n    if (hotSwaps) {\n      hotSwapFunctions.push(...hotSwaps);\n    }\n\n    if (value === IGNORE) continue;\n    hasRemoteChange = true;\n    normalizedNewProps[key] = value;\n\n    if (isRemoteFragment(currentExternalValue)) {\n      removeNodeFromContainer(currentExternalValue, rootInternals);\n    }\n\n    if (isRemoteFragment(newExternalValue)) {\n      moveNodeToContainer(component, newExternalValue, rootInternals);\n    }\n  }\n\n  return perform(component, rootInternals, {\n    remote: channel => {\n      if (hasRemoteChange) {\n        channel(ACTION_UPDATE_PROPS, component.id, normalizedNewProps);\n      }\n    },\n    local: () => {\n      const mergedExternalProps = { ...currentExternalProps,\n        ...newProps\n      };\n      internals.externalProps = strict ? Object.freeze(mergedExternalProps) : mergedExternalProps;\n      internals.internalProps = { ...internals.internalProps,\n        ...normalizedNewProps\n      };\n\n      for (const [hotSwappable, newValue] of hotSwapFunctions) {\n        hotSwappable[FUNCTION_CURRENT_IMPLEMENTATION_KEY] = newValue;\n      }\n    }\n  });\n} // Imagine the following remote-ui components we might render in a remote context:\n//\n// const root = createRemoteRoot();\n// const {value, onChange, onPress} = getPropsForValue();\n//\n// const textField = root.createComponent('TextField', {value, onChange});\n// const button = root.createComponent('Button', {onPress});\n//\n// root.appendChild(textField);\n// root.appendChild(button);\n//\n// function getPropsForValue(value = '') {\n//   return {\n//     value,\n//     onChange: () => {\n//       const {value, onChange, onPress} = getPropsForValue();\n//       textField.updateProps({value, onChange});\n//       button.updateProps({onPress});\n//     },\n//     onPress: () => console.log(value),\n//   };\n// }\n//\n//\n// In this example, assume that the `TextField` `onChange` prop is run on blur.\n// If this were running on the host, the following steps would happen if you pressed\n// on the button:\n//\n// 1. The text field blurs, and so calls `onChange()` with its current value, which\n//    then calls `setValue()` with the updated value.\n// 2. We synchronously update the `value`, `onChange`, and `onPress` props to point at\n//    the most current `value`.\n// 3. Handling blur is finished, so the browser now handles the click by calling the\n//    (newly-updated) `Button` `onPress()`, which logs out the new value.\n//\n// Because remote-ui reproduces a UI tree asynchronously from the remote context, the\n// steps above run in a different order:\n//\n// 1. The text field blurs, and so calls `onChange()` with its current value.\n// 2. Handling blur is finished **from the perspective of the main thread**, so the\n//    browser now handles the click by calling the (original) `Button` `onPress()`, which\n//    logs out the **initial** value.\n// 3. In the remote context, we receive the `onChange()` call, which calls updates the props\n//    on the `Button` and `TextField` to be based on the new `value`, but by now it\u2019s\n//    already too late for `onPress` \u2014 the old version has already been called!\n//\n// As you can see, the timing issue introduced by the asynchronous nature of remote-ui\n// can cause \u201Cold props\u201D to be called from the main thread. This example may seem like\n// an unusual pattern, and it is if you are using `@remote-ui/core` directly; you\u2019d generally\n// keep a mutable reference to the state, instead of closing over the state with new props.\n// However, abstractions on top of `@remote-ui/core`, like the React reconciler in\n// `@remote-ui/react`, work almost entirely by closing over state, so this issue is\n// much more common with those declarative libraries.\n//\n// To protect against this, we handle function props a bit differently. When we have a\n// function prop, we replace it with a new function that calls the original. However,\n// we make the original mutable, by making it a property on the function itself. When\n// this function subsequently updates, we don\u2019t send the update to the main thread (as\n// we just saw, this can often be \"too late\" to be of any use). Instead, we swap out\n// the mutable reference to the current implementation of the function prop, which can\n// be done synchronously. In the example above, this would all happen synchronously in\n// the remote context; in our handling of `TextField onChange()`, we update `Button onPress()`,\n// and swap out the implementations. Now, when the main thread attempts to call `Button onPress()`,\n// it instead calls our wrapper around the function, which can refer to, and call, the\n// most recently-applied implementation, instead of directly calling the old implementation.\n\n\nfunction tryHotSwappingValues(currentValue, newValue) {\n  if (typeof currentValue === 'function' && FUNCTION_CURRENT_IMPLEMENTATION_KEY in currentValue) {\n    return [typeof newValue === 'function' ? IGNORE : makeValueHotSwappable(newValue), [[currentValue, newValue]]];\n  }\n\n  if (Array.isArray(currentValue)) {\n    return tryHotSwappingArrayValues(currentValue, newValue);\n  }\n\n  if (typeof currentValue === 'object' && currentValue != null && !isRemoteFragment(currentValue)) {\n    return tryHotSwappingObjectValues(currentValue, newValue);\n  }\n\n  return [currentValue === newValue ? IGNORE : newValue];\n}\n\nfunction makeValueHotSwappable(value) {\n  if (isRemoteFragment(value)) {\n    return value;\n  }\n\n  if (typeof value === 'function') {\n    const wrappedFunction = (...args) => {\n      return wrappedFunction[FUNCTION_CURRENT_IMPLEMENTATION_KEY](...args);\n    };\n\n    Object.defineProperty(wrappedFunction, FUNCTION_CURRENT_IMPLEMENTATION_KEY, {\n      enumerable: false,\n      configurable: false,\n      writable: true,\n      value\n    });\n    return wrappedFunction;\n  } else if (Array.isArray(value)) {\n    return value.map(makeValueHotSwappable);\n  } else if (typeof value === 'object' && value != null) {\n    return Object.keys(value).reduce((newValue, key) => {\n      newValue[key] = makeValueHotSwappable(value[key]);\n      return newValue;\n    }, {});\n  }\n\n  return value;\n} // eslint-disable-next-line consistent-return\n\n\nfunction collectNestedHotSwappableValues(value) {\n  if (typeof value === 'function') {\n    if (FUNCTION_CURRENT_IMPLEMENTATION_KEY in value) return [value];\n  } else if (Array.isArray(value)) {\n    return value.reduce((all, element) => {\n      const nested = collectNestedHotSwappableValues(element);\n      return nested ? [...all, ...nested] : all;\n    }, []);\n  } else if (typeof value === 'object' && value != null) {\n    return Object.keys(value).reduce((all, key) => {\n      const nested = collectNestedHotSwappableValues(value[key]);\n      return nested ? [...all, ...nested] : all;\n    }, []);\n  }\n}\n\nfunction appendChild(container, child, internals, rootInternals) {\n  var _currentParent$childr;\n\n  const {\n    nodes,\n    strict\n  } = rootInternals;\n\n  if (!nodes.has(child)) {\n    throw new Error(`Cannot append a node that was not created by this remote root`);\n  }\n\n  const currentParent = child.parent;\n  const existingIndex = (_currentParent$childr = currentParent === null || currentParent === void 0 ? void 0 : currentParent.children.indexOf(child)) !== null && _currentParent$childr !== void 0 ? _currentParent$childr : -1;\n  return perform(container, rootInternals, {\n    remote: channel => {\n      channel(ACTION_INSERT_CHILD, container.id, existingIndex < 0 ? container.children.length : container.children.length - 1, serializeChild(child), currentParent ? currentParent.id : false);\n    },\n    local: () => {\n      moveNodeToContainer(container, child, rootInternals);\n      let newChildren;\n\n      if (currentParent) {\n        const currentInternals = getCurrentInternals(currentParent, rootInternals);\n        const currentChildren = [...currentInternals.children];\n        currentChildren.splice(existingIndex, 1);\n\n        if (currentParent === container) {\n          newChildren = currentChildren;\n        } else {\n          currentInternals.children = strict ? Object.freeze(currentChildren) : currentChildren;\n          newChildren = [...internals.children];\n        }\n      } else {\n        newChildren = [...internals.children];\n      }\n\n      newChildren.push(child);\n      internals.children = strict ? Object.freeze(newChildren) : newChildren;\n    }\n  });\n} // there is a problem with this, because when multiple children\n// are removed, there is no guarantee the messages will arrive in the\n// order we need them to on the host side (it depends how React\n// calls our reconciler). If it calls with, for example, the removal of\n// the second last item, then the removal of the last item, it will fail\n// because the indexes moved around.\n//\n// Might need to send the removed child ID, or find out if we\n// can collect removals into a single update.\n\n\nfunction removeChild(container, child, internals, rootInternals) {\n  const {\n    strict\n  } = rootInternals;\n  return perform(container, rootInternals, {\n    remote: channel => channel(ACTION_REMOVE_CHILD, container.id, container.children.indexOf(child)),\n    local: () => {\n      removeNodeFromContainer(child, rootInternals);\n      const newChildren = [...internals.children];\n      newChildren.splice(newChildren.indexOf(child), 1);\n      internals.children = strict ? Object.freeze(newChildren) : newChildren;\n    }\n  });\n}\n\nfunction insertChildBefore(container, child, before, internals, rootInternals) {\n  var _currentParent$childr2;\n\n  const {\n    strict,\n    nodes\n  } = rootInternals;\n\n  if (!nodes.has(child)) {\n    throw new Error(`Cannot insert a node that was not created by this remote root`);\n  }\n\n  const currentParent = child.parent;\n  const existingIndex = (_currentParent$childr2 = currentParent === null || currentParent === void 0 ? void 0 : currentParent.children.indexOf(child)) !== null && _currentParent$childr2 !== void 0 ? _currentParent$childr2 : -1;\n  return perform(container, rootInternals, {\n    remote: channel => {\n      const beforeIndex = container.children.indexOf(before);\n      channel(ACTION_INSERT_CHILD, container.id, beforeIndex < existingIndex || existingIndex < 0 ? beforeIndex : beforeIndex - 1, serializeChild(child), currentParent ? currentParent.id : false);\n    },\n    local: () => {\n      moveNodeToContainer(container, child, rootInternals);\n      let newChildren;\n\n      if (currentParent) {\n        const currentInternals = getCurrentInternals(currentParent, rootInternals);\n        const currentChildren = [...currentInternals.children];\n        currentChildren.splice(existingIndex, 1);\n\n        if (currentParent === container) {\n          newChildren = currentChildren;\n        } else {\n          currentInternals.children = strict ? Object.freeze(currentChildren) : currentChildren;\n          newChildren = [...internals.children];\n        }\n      } else {\n        newChildren = [...internals.children];\n      }\n\n      newChildren.splice(newChildren.indexOf(before), 0, child);\n      internals.children = strict ? Object.freeze(newChildren) : newChildren;\n    }\n  });\n}\n\nfunction normalizeChild(child, root) {\n  return typeof child === 'string' ? root.createText(child) : child;\n}\n\nfunction moveNodeToContainer(container, node, rootInternals) {\n  const {\n    tops,\n    parents\n  } = rootInternals;\n  const newTop = container.kind === KIND_ROOT ? container : tops.get(container);\n  tops.set(node, newTop);\n  parents.set(node, container);\n  moveFragmentToContainer(node, rootInternals);\n  allDescendants(node, descendant => {\n    tops.set(descendant, newTop);\n    moveFragmentToContainer(descendant, rootInternals);\n  });\n}\n\nfunction moveFragmentToContainer(node, rootInternals) {\n  if (node.kind !== KIND_COMPONENT) return;\n  const props = node.props;\n  if (!props) return;\n  Object.values(props).forEach(prop => {\n    if (!isRemoteFragment(prop)) return;\n    moveNodeToContainer(node, prop, rootInternals);\n  });\n}\n\nfunction removeNodeFromContainer(node, rootInternals) {\n  const {\n    tops,\n    parents\n  } = rootInternals;\n  tops.delete(node);\n  parents.delete(node);\n  allDescendants(node, descendant => {\n    tops.delete(descendant);\n    removeFragmentFromContainer(descendant, rootInternals);\n  });\n  removeFragmentFromContainer(node, rootInternals);\n}\n\nfunction removeFragmentFromContainer(node, rootInternals) {\n  if (node.kind !== KIND_COMPONENT) return;\n  const props = node.remoteProps;\n\n  for (const key of Object.keys(props !== null && props !== void 0 ? props : {})) {\n    const prop = props[key];\n    if (!isRemoteFragment(prop)) continue;\n    removeNodeFromContainer(prop, rootInternals);\n  }\n}\n\nfunction makePartOfTree(node, {\n  parents,\n  tops,\n  nodes\n}) {\n  nodes.add(node);\n  Object.defineProperty(node, 'parent', {\n    get() {\n      return parents.get(node);\n    },\n\n    configurable: true,\n    enumerable: true\n  });\n  Object.defineProperty(node, 'top', {\n    get() {\n      return tops.get(node);\n    },\n\n    configurable: true,\n    enumerable: true\n  });\n}\n\nfunction serializeChild(value) {\n  return value.kind === KIND_TEXT ? {\n    id: value.id,\n    kind: value.kind,\n    text: value.text\n  } : {\n    id: value.id,\n    kind: value.kind,\n    type: value.type,\n    props: value.remoteProps,\n    children: value.children.map(child => serializeChild(child))\n  };\n}\n\nfunction serializeProp(prop) {\n  if (isRemoteFragment(prop)) {\n    return serializeFragment(prop);\n  }\n\n  return prop;\n}\n\nfunction serializeFragment(value) {\n  return {\n    id: value.id,\n    kind: value.kind,\n\n    get children() {\n      return value.children.map(child => serializeChild(child));\n    }\n\n  };\n}\n\nfunction getCurrentInternals(currentParent, rootInternals) {\n  if (currentParent.kind === KIND_ROOT) {\n    return rootInternals;\n  }\n\n  if (currentParent.kind === KIND_FRAGMENT) {\n    return rootInternals.fragments.get(currentParent);\n  }\n\n  return rootInternals.components.get(currentParent);\n}\n\nfunction makeRemote(value, id, root) {\n  Object.defineProperty(value, 'id', {\n    value: id,\n    configurable: true,\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(value, 'root', {\n    value: root,\n    configurable: true,\n    writable: false,\n    enumerable: false\n  });\n}\n\nfunction tryHotSwappingObjectValues(currentValue, newValue) {\n  if (typeof newValue !== 'object' || newValue == null) {\n    var _collectNestedHotSwap;\n\n    return [makeValueHotSwappable(newValue), (_collectNestedHotSwap = collectNestedHotSwappableValues(currentValue)) === null || _collectNestedHotSwap === void 0 ? void 0 : _collectNestedHotSwap.map(hotSwappable => [hotSwappable, undefined])];\n  }\n\n  let hasChanged = false;\n  const hotSwaps = [];\n  const normalizedNewValue = {}; // eslint-disable-next-line guard-for-in\n\n  for (const key in currentValue) {\n    const currentObjectValue = currentValue[key];\n\n    if (!(key in newValue)) {\n      hasChanged = true;\n      const nestedHotSwappables = collectNestedHotSwappableValues(currentObjectValue);\n\n      if (nestedHotSwappables) {\n        hotSwaps.push(...nestedHotSwappables.map(hotSwappable => [hotSwappable, undefined]));\n      }\n    }\n\n    const newObjectValue = newValue[key];\n    const [updatedValue, elementHotSwaps] = tryHotSwappingValues(currentObjectValue, newObjectValue);\n    if (elementHotSwaps) hotSwaps.push(...elementHotSwaps);\n\n    if (updatedValue !== IGNORE) {\n      hasChanged = true;\n      normalizedNewValue[key] = updatedValue;\n    }\n  }\n\n  for (const key in newValue) {\n    if (key in normalizedNewValue) continue;\n    hasChanged = true;\n    normalizedNewValue[key] = makeValueHotSwappable(newValue[key]);\n  }\n\n  return [hasChanged ? normalizedNewValue : IGNORE, hotSwaps];\n}\n\nfunction tryHotSwappingArrayValues(currentValue, newValue) {\n  if (!Array.isArray(newValue)) {\n    var _collectNestedHotSwap2;\n\n    return [makeValueHotSwappable(newValue), (_collectNestedHotSwap2 = collectNestedHotSwappableValues(currentValue)) === null || _collectNestedHotSwap2 === void 0 ? void 0 : _collectNestedHotSwap2.map(hotSwappable => [hotSwappable, undefined])];\n  }\n\n  let hasChanged = false;\n  const hotSwaps = [];\n  const newLength = newValue.length;\n  const currentLength = currentValue.length;\n  const maxLength = Math.max(currentLength, newLength);\n  const normalizedNewValue = [];\n\n  for (let i = 0; i < maxLength; i++) {\n    const currentArrayValue = currentValue[i];\n    const newArrayValue = newValue[i];\n\n    if (i < newLength) {\n      if (i >= currentLength) {\n        hasChanged = true;\n        normalizedNewValue[i] = makeValueHotSwappable(newArrayValue);\n        continue;\n      }\n\n      const [updatedValue, elementHotSwaps] = tryHotSwappingValues(currentArrayValue, newArrayValue);\n      if (elementHotSwaps) hotSwaps.push(...elementHotSwaps);\n\n      if (updatedValue === IGNORE) {\n        normalizedNewValue[i] = currentArrayValue;\n        continue;\n      }\n\n      hasChanged = true;\n      normalizedNewValue[i] = updatedValue;\n    } else {\n      hasChanged = true;\n      const nestedHotSwappables = collectNestedHotSwappableValues(currentArrayValue);\n\n      if (nestedHotSwappables) {\n        hotSwaps.push(...nestedHotSwappables.map(hotSwappable => [hotSwappable, undefined]));\n      }\n    }\n  }\n\n  return [hasChanged ? normalizedNewValue : IGNORE, hotSwaps];\n}\n\nexport { createRemoteRoot };\n", "import { createRemoteRoot } from '@remote-ui/core';\n\n/**\n * This function takes an extension function that is expecting a `RemoteRoot` as its\n * first argument, and returns a new function that accepts a `RemoteChannel` instead.\n * This is a convenience that allows the raw UI extension API to only expose the simpler\n * `RemoteChannel` type, while allowing the extension to use the more powerful `RemoteRoot`,\n * provided by a version of `@remote-ui/core` that the extension controls.\n */\nfunction createExtensionRegistrationFunction() {\n  const extensionWrapper = (target, implementation) => {\n    var _shopify;\n    async function extension(...args) {\n      // Rendering extensions have two arguments. Non-rendering extensions don\u2019t have\n      // a `RemoteChannel` that needs to be normalized, so we can just pass the arguments\n      // through.\n      if (args.length === 1) {\n        return implementation(...args);\n      }\n      const [{\n        channel,\n        components\n      }, api] = args;\n      const root = createRemoteRoot(channel, {\n        components,\n        strict: true\n      });\n      let renderResult = implementation(root, api);\n      if (typeof renderResult === 'object' && renderResult != null && 'then' in renderResult) {\n        renderResult = await renderResult;\n      }\n      root.mount();\n      return renderResult;\n    }\n    (_shopify = globalThis.shopify) === null || _shopify === void 0 ? void 0 : _shopify.extend(target, extension);\n    return extension;\n  };\n  return extensionWrapper;\n}\n\nexport { createExtensionRegistrationFunction };\n", "import { createExtensionRegistrationFunction } from '../../utilities/registration.mjs';\n\nconst extension = createExtensionRegistrationFunction();\n\n/**\n * Registers your UI Extension to run for the selected extension target.\n *\n * @param target The extension target you are registering for.\n *\n * @param implementation The function that will be called when Checkout begins rendering\n * your extension. This function is called with the API checkout provided to your\n * extension.\n *\n * @deprecated This is deprecated, use `extension` instead.\n */\nconst extend = extension;\n\nexport { extend, extension };\n", "import { createRemoteComponent } from '@remote-ui/core';\n\n/**\n * Use banners to communicate important messages to customers in a prominent way.\n */\nconst Banner = createRemoteComponent('Banner');\n\nexport { Banner };\n", "import {\n  extension,\n  Banner\n} from '@shopify/ui-extensions/checkout';\n\nexport default extension(\n  'purchase.checkout.block.render',\n  (root, {shop, settings}) => {\n    var staticTitle = \"Your cart will expire in {{timer}}\";\n    var title = (settings.current.timer_title && settings.current.timer_title!=\"\") ?  settings.current.timer_title :  staticTitle\n    var type = (settings.current.timer_type && settings.current.timer_type!=\"\") ? settings.current.timer_type : \"warning\"\n    const banner = root.createComponent(Banner, {\n      title: title.replace('{{timer}}','0:0'),\n      status: type\n    });\n    let minutes = (settings.current.timer_expire && settings.current.timer_expire!=\"\") ? parseInt(settings.current.timer_expire) : 2\n\n    const calculateEndTime = (timer) => {\n      const currentTime = new Date();\n      const endTime = new Date(currentTime.getTime() + timer * 60000); // Convert minutes to milliseconds\n      return endTime;\n    };\n    setTimeout(() => {\n      console.log(\"==>\",self,shop.storefrontUrl+'cart/clear');\n      // self.location = shop.storefrontUrl+'cart/clear';\n      fetch(shop.storefrontUrl + 'cart.js')\n      .then(response => response.json())\n      .then(data => { \n        console.log(data);\n       });\n      // fetch(shop.storefrontUrl+'cart/clear').then(response => response.json()).then(data => {\n      //   console.log(data);\n      // });\n    }, 3000);\n    let countDownDate = calculateEndTime(minutes).getTime();\n    var x = setInterval(() => {\n      // Get today's date and time\n      let now = new Date().getTime();\n          \n      // Find the distance between now and the count down date\n      let distance = countDownDate - now;\n\n      // Time calculations for days, hours, minutes and seconds\n      let days = Math.floor(distance / (1000 * 60 * 60 * 24));\n      let hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n      let minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      let seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      // Display the result in the element with id=\"demo\"\n      let timein = (days > 0 ? days + \"d \" : '') + (hours > 0 ? hours + \"h \" : '') + minutes + \"m \" + seconds + \"s \";\n      banner.updateProps({\n        title: title.replace('{{timer}}',timein),\n      });\n\n      if (distance <= 0) {\n        clearInterval(x);\n        banner.updateProps({\n          title: 'expire',\n        });\n        fetch(shop.storefrontUrl+'cart/clear').then(response => response.json()).then(data => {\n          console.log(data);\n        });\n        // self.location.replace(shop.storefrontUrl+'cart/clear')\n        // console.log(self,shop.storefrontUrl+'cart/clear');\n      }\n    }, 1000);\n    settings.subscribe((newSettings) => {\n      minutes = (newSettings.timer_expire && newSettings.timer_expire!= \"\") ? parseInt(newSettings.timer_expire) : 2\n      countDownDate = calculateEndTime(minutes).getTime();\n      title = (newSettings.timer_title && newSettings.timer_title != \"\") ? newSettings.timer_title : staticTitle\n      banner.updateProps({\n        status: (newSettings.timer_type && newSettings.timer_type != \"\") ? newSettings.timer_type : \"warning\",\n      });\n    });\n    root.appendChild(banner);\n  },\n);\n"],
  "mappings": "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",
  "names": ["element", "extension", "minutes"]
}
